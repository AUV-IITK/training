<?xml version="1.0" ?>
<!--rosrun gazebo_ros spawn_model -file ~/Simulation/src/diff_drive_description/urdf/diff_drive.urdf -urdf -x 1 -model diff_drive-->
<!--rosrun teleop_twist_keyboard teleop_twist_keyboard.py-->
<robot name="RoboBot" xmlns:xacro="https://www.ros.org/wiki/xacro" >

    <gazebo reference="left_wheel">
      <material>Gazebo/Turquoise</material>
    </gazebo>
    <gazebo reference="right_wheel">
      <material>Gazebo/Turquoise</material>
    </gazebo>
   <!--<gazebo reference="chassis">
      <material>
       <script>
          <uri>materials://scripts/repeated.material</uri>
          <name>Template/Blue</name>
        </script>

      </material>
    </gazebo> -->

    <gazebo>
      <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
        <legacyMode>false</legacyMode>
        <alwaysOn>true</alwaysOn>
        <updateRate>20</updateRate>
        <leftJoint>left_wheel_joint</leftJoint>
        <rightJoint>right_wheel_joint</rightJoint>
        <wheelSeparation>0.2</wheelSeparation>
        <wheelDiameter>0.2</wheelDiameter>
        <torque>0.2</torque>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>chassis</robotBaseFrame>
      </plugin>
    </gazebo>


    <link name="chassis">
      <pose>0 0 0.1 0 0 0</pose>
      <inertial>
        <mass value="5"/>
        <origin rpy="0 0 0" xyz="0 0 0.1"/>
        <inertia ixx="0.0395" ixy="0" ixz="0" iyy="0.1062" iyz="0" izz="0.1062"/>
      </inertial>

      <collision>
        <geometry>
          <box size="0.5 0.3 0.07"/>
        </geometry>
      </collision>

      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.5 0.3 0.07"/>
        </geometry>
      </visual>

      <collision >
        <origin rpy=" 0 0 0" xyz="0.35 0 -0.05"/>
        <geometry>
          <sphere radius="0.05"/>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual>
        <origin rpy=" 0 0 0" xyz="0.2 0 -0.05"/>
        <geometry>
          <sphere radius="0.05"/>
        </geometry>
      </visual>

    </link>
    <link name="right_wheel">
      <inertial>
        <mass value="0.2"/>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <inertia ixx="0.0005" ixy="0" ixz="0" iyy="0.0005" iyz="0" izz="0.001"/>
      </inertial>

      <collision>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <geometry>
          <cylinder length="0.04" radius="0.1"/>
        </geometry>
      </collision>

      <visual>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <geometry>
          <cylinder length="0.04" radius="0.1"/>
        </geometry>

      </visual>

    </link>


    <link name="left_wheel">
      <inertial>
        <mass value="0.2"/>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <inertia ixx="0.0005" ixy="0" ixz="0" iyy="0.0005" iyz="0" izz="0.001"/>
      </inertial>

      <collision>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <geometry>
          <cylinder length="0.04" radius="0.1"/>
        </geometry>
      </collision>

      <visual>
        <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
        <geometry>
          <cylinder length="0.04" radius="0.1"/>
        </geometry>
      </visual>

    </link>
    <joint type="continuous" name="right_wheel_joint">
      <origin rpy="0 0 0" xyz="-0.05 0.15 0"/>
      <child link="right_wheel"/>
      <parent link="chassis"/>
      <axis rpy="0 0 0" xyz="0 1 0"/>
    </joint>

    <joint type="continuous" name="left_wheel_joint" >
      <origin rpy="0 0 0" xyz="-0.05 -0.15 0"/>
      <child link="left_wheel"/>
      <parent link="chassis"/>
      <axis rpy="0 0 0" xyz="0 1 0"/>
    </joint>
    
    <!--camera_1-->
    <link name="camera_1">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.02 0.02 0.02"/>
      </geometry>
      
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0.25 0.1 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="camera_1_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.25 0.1 0" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="camera_1"/>
  </joint>
 <gazebo reference="camera_1">
    <material>Gazebo/Red</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>RoboBot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_1</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <!--camera_2-->
  <link name="camera_2">
    <collision>
     <geometry>
    <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="0.02 0.02 0.02"/>
      </geometry>
      
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0.25 -0.1 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="camera_2_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.25 -0.1 0" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="camera_2"/>
  </joint>
 <gazebo reference="camera_2">
    <material>Gazebo/Red</material>
    <sensor type="camera" name="camera2">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>RoboBot/camera_2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_2</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>  
<!--laser-->
   

  



  <link name="hokuyo_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="Blue"/>
    </visual>
  </link>
  <joint name="hokuyo_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.1 0 0.055"/>
    <parent link="chassis"/>
    <child link="hokuyo_link"/>
  </joint>
  <gazebo reference="hokuyo_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0.025 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.001</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/RoboBot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo> 

</robot>
